from typing import Tuple, Set, Iterable, List, overload


class CompileCodeRequestEventHandler:
    def __init__(self, TargetObject: Object, TargetMethod: IntPtr): ...
    def BeginInvoke(self, sender: GH_ScriptEditor, DelegateCallback: AsyncCallback, DelegateAsyncState: Object) -> IAsyncResult: ...
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    def Invoke(self, sender: GH_ScriptEditor) -> None: ...


class GH_AssemblyBrowser:
    def __init__(self): ...
    def AddAssemblies(self, paths: Iterable[str]) -> None: ...
    def AddAssembly(self, path: str) -> None: ...
    def AssignExtraAssemblies(self, tabName: str, assemblies: Iterable[str]) -> None: ...
    @property
    def Assemblies(self) -> ReadOnlyCollection: ...
    @property
    def AssembliesChanged(self) -> bool: ...
    def UpdateUI(self) -> None: ...


class GH_BeforeAfterSolveInstanceSnippetButton(GH_ScriptEditorButton):
    def __init__(self): ...
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Icon(self) -> Bitmap: ...
    def PopulateTooltip(self, sender: Object, e: GH_TooltipDisplayEventArgs) -> None: ...
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: MouseEventArgs) -> None: ...


class GH_CodeBlock:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, line: str, readonly: bool): ...
    @overload
    def __init__(self, lines: Iterable[str], readonly: bool): ...
    def AddLine(self, line: str) -> None: ...
    def AddLines(self, lines: Iterable[str]) -> None: ...
    @property
    def Lines(self) -> Iterable[str]: ...
    @property
    def ReadOnly(self) -> bool: ...
    @ReadOnly.setter
    def ReadOnly(self, AutoPropertyValue: bool) -> None: ...
    def ToString(self) -> str: ...


class GH_CodeBlocks:
    def __init__(self): ...
    @overload
    def Add(self, line: str, readonly: bool) -> None: ...
    @overload
    def Add(self, lines: Iterable[str], readonly: bool) -> None: ...
    def GetAllLines(self, lines: Set(str), readonly: Set(bool)) -> Tuple[Set(str), Set(bool)]: ...
    def GetMutableCodeBlock(self, index: int) -> GH_CodeBlock: ...
    def MergeConsecutiveBlocks(self) -> int: ...
    def StringSplit(delim: str, stream: str) -> List: ...


class GH_CustomReference:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, path: str, assembly: Assembly): ...
    @property
    def Assembly(self) -> Assembly: ...
    @property
    def Path(self) -> str: ...
    @Assembly.setter
    def Assembly(self, Value: Assembly) -> None: ...
    @Path.setter
    def Path(self, Value: str) -> None: ...


class GH_FontPickButton(GH_ScriptEditorButton):
    def __init__(self): ...
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Icon(self) -> Bitmap: ...
    def PopulateTooltip(self, sender: Object, e: GH_TooltipDisplayEventArgs) -> None: ...
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: MouseEventArgs) -> None: ...


class GH_HistoricAssembly:
    def __init__(self): ...
    def CompareTo(self, other: GH_HistoricAssembly) -> int: ...


class GH_PreviewSnippetButton(GH_ScriptEditorButton):
    def __init__(self): ...
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Icon(self) -> Bitmap: ...
    def PopulateTooltip(self, sender: Object, e: GH_TooltipDisplayEventArgs) -> None: ...
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: MouseEventArgs) -> None: ...


class GH_ScriptEditor:
    @overload
    def __init__(self, language: GH_ScriptLanguage): ...
    @overload
    def __init__(self, language: GH_ScriptLanguage, owner: IGH_DocumentObject): ...
    def add_CompileCodeRequest(self, obj: CompileCodeRequestEventHandler) -> None: ...
    def add_SourceCodeChanged(self, obj: SourceCodeChangedEventHandler) -> None: ...
    def AddButton(self, button: GH_ScriptEditorButton) -> None: ...
    def CacheCurrentScript(self) -> bool: ...
    def CodeEditor_TextChanged(self) -> None: ...
    def CompileTimerTick(self, sender: Object, args: EventArgs) -> None: ...
    def DefaultAssemblies() -> List: ...
    def DefaultAssemblyLocations() -> List: ...
    def FindScriptEditor(owner: IGH_DocumentObject) -> GH_ScriptEditor: ...
    def FocusOnSource(self) -> None: ...
    @property
    def AutoSolveEnabled() -> bool: ...
    @property
    def Cache_AppDataDirectory() -> str: ...
    @property
    def CurrentPosition(self) -> Point: ...
    @property
    def Document(self) -> ITextSource: ...
    @property
    def Language(self) -> GH_ScriptLanguage: ...
    def GetAllCacheFiles() -> List: ...
    def GetSourceCode(self) -> GH_CodeBlocks: ...
    def RegisterAssemblies(self, customReferences: List) -> None: ...
    def remove_CompileCodeRequest(self, obj: CompileCodeRequestEventHandler) -> None: ...
    def remove_SourceCodeChanged(self, obj: SourceCodeChangedEventHandler) -> None: ...
    @AutoSolveEnabled.setter
    def AutoSolveEnabled(AutoPropertyValue: bool) -> None: ...
    def SetCurrentPosition(self, position: Point) -> None: ...
    def SetSourceCode(self, code: GH_CodeBlocks) -> None: ...


class GH_ScriptEditorButton:
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Bounds(self) -> Rectangle: ...
    @property
    def Highlight(self) -> bool: ...
    @property
    def HighlightOnHover(self) -> bool: ...
    @property
    def Icon(self) -> Bitmap: ...
    def PopulateTooltip(self, sender: Object, e: GH_TooltipDisplayEventArgs) -> None: ...
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: MouseEventArgs) -> None: ...
    @Bounds.setter
    def Bounds(self, AutoPropertyValue: Rectangle) -> None: ...


class GH_ScriptLanguage:
    #None = 0
    VB = 1
    CS = 2


class GH_ShrinkEditorButton(GH_ScriptEditorButton):
    def __init__(self): ...
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Frame(self) -> Rectangle: ...
    @property
    def Highlight(self) -> bool: ...
    @property
    def HighlightOnHover(self) -> bool: ...
    @property
    def Icon(self) -> Bitmap: ...
    @property
    def Shrink(self) -> bool: ...
    @property
    def Shrunk(self) -> bool: ...
    def PopulateTooltip(self, sender: Object, e: GH_TooltipDisplayEventArgs) -> None: ...
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: MouseEventArgs) -> None: ...
    @Frame.setter
    def Frame(self, AutoPropertyValue: Rectangle) -> None: ...
    @Shrink.setter
    def Shrink(self, AutoPropertyValue: bool) -> None: ...
    @Shrunk.setter
    def Shrunk(self, AutoPropertyValue: bool) -> None: ...


class SourceCodeChangedEventHandler:
    def __init__(self, TargetObject: Object, TargetMethod: IntPtr): ...
    def BeginInvoke(self, sender: GH_ScriptEditor, DelegateCallback: AsyncCallback, DelegateAsyncState: Object) -> IAsyncResult: ...
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    def Invoke(self, sender: GH_ScriptEditor) -> None: ...

from typing import Tuple, Set, Iterable, List, overload


class EditModeChangedEventHandler:
    def __init__(self, TargetObject: Object, TargetMethod: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: EventArgs, DelegateCallback: AsyncCallback, DelegateAsyncState: Object) -> IAsyncResult: ...
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: EventArgs) -> None: ...


class IRcpItem:
    @property
    def Bounds(self) -> Rectangle: ...
    @property
    def DesiredHeight(self) -> int: ...
    @property
    def OwnerInstanceId(self) -> Guid: ...
    def MouseClick(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseDoubleClick(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseDown(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseMove(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseUp(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def OnDelete(self) -> None: ...
    def Render(self, graphics: Graphics) -> None: ...
    @Bounds.setter
    def Bounds(self, Value: Rectangle) -> None: ...


class LayoutChangedEventHandler:
    def __init__(self, TargetObject: Object, TargetMethod: IntPtr): ...
    def BeginInvoke(self, sender: Object, e: RcpLayoutEventArgs, DelegateCallback: AsyncCallback, DelegateAsyncState: Object) -> IAsyncResult: ...
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    def Invoke(self, sender: Object, e: RcpLayoutEventArgs) -> None: ...


class RcpDeadItem(RcpItem):
    def __init__(self, id: Guid): ...
    @property
    def DesiredHeight(self) -> int: ...
    @property
    def OwnerInstanceId(self) -> Guid: ...
    def Render(self, graphics: Graphics) -> None: ...




class RcpGroup(RcpItem):
    def __init__(self): ...
    @overload
    def AddItem(self, item: IRcpItem) -> None: ...
    @overload
    def AddItem(self, item: IRcpItem, index: int) -> None: ...
    def Collapse(self) -> None: ...
    def Expand(self) -> None: ...
    @property
    def Collapsed(self) -> bool: ...
    @property
    def Colour(self) -> Color: ...
    @property
    def ContentRectangle(self) -> Rectangle: ...
    @property
    def DesiredHeight(self) -> int: ...
    @property
    def Expanded(self) -> bool: ...
    @property
    def IconRectangle(self) -> Rectangle: ...
    @property
    def ItemCount(self) -> int: ...
    @property
    def ItemLayoutRectangle(self) -> Rectangle: ...
    @property
    def Items(self) -> Iterable[IRcpItem]: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameRectangle(self) -> Rectangle: ...
    @property
    def TitleRectangle(self) -> Rectangle: ...
    def ImpliedInsertionIndex(self, pt: Point) -> Tuple[bool, float, int]: ...
    def IndexAt(self, pt: Point) -> int: ...
    def ItemAt(self, pt: Point) -> IRcpItem: ...
    def LayoutItems(self) -> None: ...
    def OnDelete(self) -> None: ...
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def RemoveItem(self, index: int) -> None: ...
    @overload
    def RemoveItem(self, item: IRcpItem) -> None: ...
    def RemovePlaceHolders(self) -> None: ...
    def Render(self, graphics: Graphics) -> None: ...
    def ReplaceItem(self, item: IRcpItem) -> bool: ...
    @Colour.setter
    def Colour(self, AutoPropertyValue: Color) -> None: ...
    @Name.setter
    def Name(self, AutoPropertyValue: str) -> None: ...
    def Toggle(self) -> None: ...
    def Write(self, writer: GH_IWriter) -> bool: ...


class RcpIndex:
    def __init__(self, groupIndex: int, itemIndex: int): ...
    @property
    def Group(self) -> int: ...
    @property
    def Item(self) -> int: ...


class RcpItem:
    @property
    def Bounds(self) -> Rectangle: ...
    @property
    def DesiredHeight(self) -> int: ...
    @property
    def OwnerInstanceId(self) -> Guid: ...
    def MouseClick(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseDoubleClick(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseDown(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseMove(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def MouseUp(self, e: MouseEventArgs) -> GH_ObjectResponse: ...
    def OnDelete(self) -> None: ...
    def Render(self, graphics: Graphics) -> None: ...
    def RhinoColour(paintCode: PaintColor) -> Color: ...
    @Bounds.setter
    def Bounds(self, AutoPropertyValue: Rectangle) -> None: ...


class RcpLabelItem(RcpItem):
    def __init__(self, text: str): ...
    @property
    def DesiredHeight(self) -> int: ...
    @property
    def OwnerInstanceId(self) -> Guid: ...
    @property
    def Text(self) -> str: ...
    def Render(self, graphics: Graphics) -> None: ...
    @Text.setter
    def Text(self, AutoPropertyValue: str) -> None: ...


class RcpLayout:
    @overload
    def __init__(self, document: GH_Document): ...
    @overload
    def __init__(self, document: GH_Document, groups: Iterable[RcpGroup]): ...
    def add_LayoutChanged(self, obj: LayoutChangedEventHandler) -> None: ...
    def Add(self, group: RcpGroup) -> None: ...
    def EnsureGroup(self) -> RcpGroup: ...
    @property
    def Count(self) -> int: ...
    @property
    def Document(self) -> GH_Document: ...
    @property
    def Group(self, index: int) -> RcpGroup: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def GetEnumeratorNotTypeSafe(self) -> IEnumerator: ...
    @overload
    def OnLayoutChanged(self) -> None: ...
    @overload
    def OnLayoutChanged(self, kind: RcpLayoutKind) -> None: ...
    def Read(self, reader: GH_IReader) -> bool: ...
    def remove_LayoutChanged(self, obj: LayoutChangedEventHandler) -> None: ...
    def Remove(self, group: RcpGroup) -> None: ...
    def RemoveAt(self, index: int) -> None: ...
    @Group.setter
    def Group(self, index: int, Value: RcpGroup) -> None: ...
    def Write(self, writer: GH_IWriter) -> bool: ...


class RcpLayoutControl(GH_DoubleBufferedPanel):
    def __init__(self): ...
    def add_EditModeChanged(self, obj: EditModeChangedEventHandler) -> None: ...
    @property
    def BottomMostGroup(self) -> RcpGroup: ...
    @property
    def EditMode(self) -> bool: ...
    @property
    def RcpLayout(self) -> RcpLayout: ...
    @property
    def ScrollBar(self) -> GH_VerticalScrollBar: ...
    def LayoutGroups(self) -> None: ...
    def remove_EditModeChanged(self, obj: EditModeChangedEventHandler) -> None: ...
    @EditMode.setter
    def EditMode(self, Value: bool) -> None: ...
    @RcpLayout.setter
    def RcpLayout(self, Value: RcpLayout) -> None: ...


class RcpLayoutEventArgs:
    def __init__(self, layout: RcpLayout, kind: RcpLayoutKind): ...
    @property
    def Kind(self) -> RcpLayoutKind: ...
    @property
    def Layout(self) -> RcpLayout: ...


class RcpLayoutKind:
    #None = 0
    Generic = 1
    ItemAdded = 2
    ItemRemoved = 3
    ItemMoved = 4
    ItemChanged = 5
    GroupAdded = 6
    GroupRemoved = 7
    GroupMoved = 8


class RcpPlaceHolder(RcpItem):
    def __init__(self, bounds: Rectangle): ...
    @property
    def DesiredHeight(self) -> int: ...
    def Render(self, G: Graphics) -> None: ...


class RcpSeparatorItem(RcpItem):
    def __init__(self): ...
    @property
    def DesiredHeight(self) -> int: ...
    @property
    def OwnerInstanceId(self) -> Guid: ...
    def Render(self, graphics: Graphics) -> None: ...


class RemoteControlPanel:
    def __init__(self): ...
    @property
    def Document(self) -> GH_Document: ...
    @Document.setter
    def Document(self, Value: GH_Document) -> None: ...

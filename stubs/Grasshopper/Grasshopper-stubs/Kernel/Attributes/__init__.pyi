from typing import Tuple, Set, Iterable, List, overload


class GH_ComponentAttributes:
    def __init__(self, component: IGH_Component): ...
    def AppendToAttributeTree(self, attributes: List) -> None: ...
    def ExpireLayout(self) -> None: ...
    @property
    def ContentBox(self) -> RectangleF: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def PathName(self) -> str: ...
    def InvalidateCanvas(self, canvas: GH_Canvas, e: GH_CanvasMouseEvent) -> bool: ...
    @overload
    def IsPickRegion(self, point: PointF) -> bool: ...
    def LayoutBounds(owner: IGH_Component, bounds: RectangleF) -> RectangleF: ...
    def LayoutComponentBox(owner: IGH_Component) -> RectangleF: ...
    def LayoutInputParams(owner: IGH_Component, componentBox: RectangleF) -> None: ...
    def LayoutOutputParams(owner: IGH_Component, componentBox: RectangleF) -> None: ...
    def RenderComponentParameters(canvas: GH_Canvas, graphics: Graphics, owner: IGH_Component, style: GH_PaletteStyle) -> None: ...
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...


class GH_FloatingParamAttributes:
    def __init__(self, param: IGH_Param): ...
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    def SetupTooltip(self, point: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...


class GH_LinkedParamAttributes:
    def __init__(self, param: IGH_Param, parent: IGH_Attributes): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    def SetupTooltip(self, point: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...



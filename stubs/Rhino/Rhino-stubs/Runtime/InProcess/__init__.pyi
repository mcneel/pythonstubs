from typing import Tuple, Set, Iterable, List, overload


class RhinoCore:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, args: Set(str)): ...
    @overload
    def __init__(self, args: Set(str), windowStyle: WindowStyle): ...
    @overload
    def __init__(self, args: Set(str), windowStyle: WindowStyle, hostWnd: IntPtr): ...
    def Dispose(self) -> None: ...
    def DoEvents(self) -> bool: ...
    def DoIdle(self) -> bool: ...
    @overload
    def InvokeInHostContext(self, action: Action) -> None: ...
    @overload
    def InvokeInHostContext(self, func: Func) -> T: ...
    def RaiseIdle(self) -> None: ...
    def Run(self) -> int: ...


class WindowStyle:
    Normal = 0
    Hidden = 1
    Minimized = 2
    Maximized = 3
    NoWindow = -1
